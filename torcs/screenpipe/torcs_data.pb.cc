// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: torcs_data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "torcs_data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* TorcsData_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TorcsData_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_torcs_5fdata_2eproto() {
  protobuf_AddDesc_torcs_5fdata_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "torcs_data.proto");
  GOOGLE_CHECK(file != NULL);
  TorcsData_descriptor_ = file->message_type(0);
  static const int TorcsData_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, width_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, height_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, image_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, save_flag_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, steer_angle_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, red_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, green_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, blue_),
  };
  TorcsData_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TorcsData_descriptor_,
      TorcsData::default_instance_,
      TorcsData_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TorcsData, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(TorcsData));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_torcs_5fdata_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TorcsData_descriptor_, &TorcsData::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_torcs_5fdata_2eproto() {
  delete TorcsData::default_instance_;
  delete TorcsData_reflection_;
}

void protobuf_AddDesc_torcs_5fdata_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020torcs_data.proto\"\213\001\n\tTorcsData\022\r\n\005widt"
    "h\030\001 \003(\005\022\016\n\006height\030\002 \003(\005\022\r\n\005image\030\003 \003(\014\022\021"
    "\n\tsave_flag\030\004 \003(\005\022\023\n\013steer_angle\030\005 \003(\001\022\013"
    "\n\003red\030\006 \003(\014\022\r\n\005green\030\007 \003(\014\022\014\n\004blue\030\010 \003(\014", 160);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "torcs_data.proto", &protobuf_RegisterTypes);
  TorcsData::default_instance_ = new TorcsData();
  TorcsData::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_torcs_5fdata_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_torcs_5fdata_2eproto {
  StaticDescriptorInitializer_torcs_5fdata_2eproto() {
    protobuf_AddDesc_torcs_5fdata_2eproto();
  }
} static_descriptor_initializer_torcs_5fdata_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int TorcsData::kWidthFieldNumber;
const int TorcsData::kHeightFieldNumber;
const int TorcsData::kImageFieldNumber;
const int TorcsData::kSaveFlagFieldNumber;
const int TorcsData::kSteerAngleFieldNumber;
const int TorcsData::kRedFieldNumber;
const int TorcsData::kGreenFieldNumber;
const int TorcsData::kBlueFieldNumber;
#endif  // !_MSC_VER

TorcsData::TorcsData()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:TorcsData)
}

void TorcsData::InitAsDefaultInstance() {
}

TorcsData::TorcsData(const TorcsData& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:TorcsData)
}

void TorcsData::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

TorcsData::~TorcsData() {
  // @@protoc_insertion_point(destructor:TorcsData)
  SharedDtor();
}

void TorcsData::SharedDtor() {
  if (this != default_instance_) {
  }
}

void TorcsData::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TorcsData::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return TorcsData_descriptor_;
}

const TorcsData& TorcsData::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_torcs_5fdata_2eproto();
  return *default_instance_;
}

TorcsData* TorcsData::default_instance_ = NULL;

TorcsData* TorcsData::New() const {
  return new TorcsData;
}

void TorcsData::Clear() {
  width_.Clear();
  height_.Clear();
  image_.Clear();
  save_flag_.Clear();
  steer_angle_.Clear();
  red_.Clear();
  green_.Clear();
  blue_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool TorcsData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TorcsData)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 width = 1;
      case 1: {
        if (tag == 8) {
         parse_width:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_width())));
        } else if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_width())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(8)) goto parse_width;
        if (input->ExpectTag(16)) goto parse_height;
        break;
      }

      // repeated int32 height = 2;
      case 2: {
        if (tag == 16) {
         parse_height:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_height())));
        } else if (tag == 18) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_height())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_height;
        if (input->ExpectTag(26)) goto parse_image;
        break;
      }

      // repeated bytes image = 3;
      case 3: {
        if (tag == 26) {
         parse_image:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_image()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_image;
        if (input->ExpectTag(32)) goto parse_save_flag;
        break;
      }

      // repeated int32 save_flag = 4;
      case 4: {
        if (tag == 32) {
         parse_save_flag:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_save_flag())));
        } else if (tag == 34) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_save_flag())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_save_flag;
        if (input->ExpectTag(41)) goto parse_steer_angle;
        break;
      }

      // repeated double steer_angle = 5;
      case 5: {
        if (tag == 41) {
         parse_steer_angle:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 41, input, this->mutable_steer_angle())));
        } else if (tag == 42) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_steer_angle())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(41)) goto parse_steer_angle;
        if (input->ExpectTag(50)) goto parse_red;
        break;
      }

      // repeated bytes red = 6;
      case 6: {
        if (tag == 50) {
         parse_red:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_red()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(50)) goto parse_red;
        if (input->ExpectTag(58)) goto parse_green;
        break;
      }

      // repeated bytes green = 7;
      case 7: {
        if (tag == 58) {
         parse_green:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_green()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_green;
        if (input->ExpectTag(66)) goto parse_blue;
        break;
      }

      // repeated bytes blue = 8;
      case 8: {
        if (tag == 66) {
         parse_blue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_blue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_blue;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TorcsData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TorcsData)
  return false;
#undef DO_
}

void TorcsData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TorcsData)
  // repeated int32 width = 1;
  for (int i = 0; i < this->width_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->width(i), output);
  }

  // repeated int32 height = 2;
  for (int i = 0; i < this->height_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->height(i), output);
  }

  // repeated bytes image = 3;
  for (int i = 0; i < this->image_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      3, this->image(i), output);
  }

  // repeated int32 save_flag = 4;
  for (int i = 0; i < this->save_flag_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->save_flag(i), output);
  }

  // repeated double steer_angle = 5;
  for (int i = 0; i < this->steer_angle_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      5, this->steer_angle(i), output);
  }

  // repeated bytes red = 6;
  for (int i = 0; i < this->red_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      6, this->red(i), output);
  }

  // repeated bytes green = 7;
  for (int i = 0; i < this->green_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      7, this->green(i), output);
  }

  // repeated bytes blue = 8;
  for (int i = 0; i < this->blue_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      8, this->blue(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:TorcsData)
}

::google::protobuf::uint8* TorcsData::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TorcsData)
  // repeated int32 width = 1;
  for (int i = 0; i < this->width_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->width(i), target);
  }

  // repeated int32 height = 2;
  for (int i = 0; i < this->height_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->height(i), target);
  }

  // repeated bytes image = 3;
  for (int i = 0; i < this->image_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(3, this->image(i), target);
  }

  // repeated int32 save_flag = 4;
  for (int i = 0; i < this->save_flag_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->save_flag(i), target);
  }

  // repeated double steer_angle = 5;
  for (int i = 0; i < this->steer_angle_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleToArray(5, this->steer_angle(i), target);
  }

  // repeated bytes red = 6;
  for (int i = 0; i < this->red_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(6, this->red(i), target);
  }

  // repeated bytes green = 7;
  for (int i = 0; i < this->green_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(7, this->green(i), target);
  }

  // repeated bytes blue = 8;
  for (int i = 0; i < this->blue_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(8, this->blue(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:TorcsData)
  return target;
}

int TorcsData::ByteSize() const {
  int total_size = 0;

  // repeated int32 width = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->width_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->width(i));
    }
    total_size += 1 * this->width_size() + data_size;
  }

  // repeated int32 height = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->height_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->height(i));
    }
    total_size += 1 * this->height_size() + data_size;
  }

  // repeated bytes image = 3;
  total_size += 1 * this->image_size();
  for (int i = 0; i < this->image_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->image(i));
  }

  // repeated int32 save_flag = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->save_flag_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->save_flag(i));
    }
    total_size += 1 * this->save_flag_size() + data_size;
  }

  // repeated double steer_angle = 5;
  {
    int data_size = 0;
    data_size = 8 * this->steer_angle_size();
    total_size += 1 * this->steer_angle_size() + data_size;
  }

  // repeated bytes red = 6;
  total_size += 1 * this->red_size();
  for (int i = 0; i < this->red_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->red(i));
  }

  // repeated bytes green = 7;
  total_size += 1 * this->green_size();
  for (int i = 0; i < this->green_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->green(i));
  }

  // repeated bytes blue = 8;
  total_size += 1 * this->blue_size();
  for (int i = 0; i < this->blue_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->blue(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TorcsData::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const TorcsData* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const TorcsData*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void TorcsData::MergeFrom(const TorcsData& from) {
  GOOGLE_CHECK_NE(&from, this);
  width_.MergeFrom(from.width_);
  height_.MergeFrom(from.height_);
  image_.MergeFrom(from.image_);
  save_flag_.MergeFrom(from.save_flag_);
  steer_angle_.MergeFrom(from.steer_angle_);
  red_.MergeFrom(from.red_);
  green_.MergeFrom(from.green_);
  blue_.MergeFrom(from.blue_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void TorcsData::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TorcsData::CopyFrom(const TorcsData& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TorcsData::IsInitialized() const {

  return true;
}

void TorcsData::Swap(TorcsData* other) {
  if (other != this) {
    width_.Swap(&other->width_);
    height_.Swap(&other->height_);
    image_.Swap(&other->image_);
    save_flag_.Swap(&other->save_flag_);
    steer_angle_.Swap(&other->steer_angle_);
    red_.Swap(&other->red_);
    green_.Swap(&other->green_);
    blue_.Swap(&other->blue_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata TorcsData::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = TorcsData_descriptor_;
  metadata.reflection = TorcsData_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
